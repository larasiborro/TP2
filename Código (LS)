# log_screen.dart:
import 'package:flutter/material.dart';
import 'log_widget.dart';
import 'package:trab2/screen/home/home_screen.dart';

class LoginScreen extends StatefulWidget {
  const LoginScreen({super.key});

  @override
  State<LoginScreen> createState() => _LoginScreenState();
}

class _LoginScreenState extends State<LoginScreen>
    with SingleTickerProviderStateMixin {
  AnimationController? _animationController;

  @override
  void initState() {
    super.initState();
    _animationController = AnimationController(
      vsync: this,
      duration: const Duration(seconds: 2),
    );
    _animationController!.addStatusListener((status) {
      if (status == AnimationStatus.completed) {
        Navigator.of(context).pushReplacement(
            MaterialPageRoute(builder: (context) => const HomeScreen()));
      }
    });
  }

  @override
  void dispose() {
    _animationController!.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Computer Networks"),
      ),
      body: SizedBox.expand(
        child: Container(
          decoration: const BoxDecoration(
              image: DecorationImage(
                  image: AssetImage("assets/images/background.jpg"),
                  fit: BoxFit.cover)),
          child: ListView(
            children: [
              Stack(
                alignment: Alignment.bottomCenter,
                children: [
                  const Column(
                    children: [
                      SizedBox(
                        height: 150,
                      ),
                      LoginForm(),
                      SignUpButton(),
                    ],
                  ),
                  StaggerAnimation(controller: _animationController!)
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}

# log_widget.dart:
import 'package:flutter/material.dart';
import 'package:trab2/screen/create_account/create_account_screen.dart';

class InputField extends StatelessWidget {
  const InputField(
      {super.key,
      // Atributos que a classe recebe
      required this.hint,
      required this.obscure,
      required this.icon});

  // Variáveis para guardar o valor dos atributos recebidos
  final String hint;
  final bool obscure;
  final IconData icon;

  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: const BoxDecoration(
        border: Border(
          bottom: BorderSide(
            color: Colors.white,
            width: 1,
          ),
        ),
      ),
      child: TextFormField(
        obscureText: obscure, // Atributos recebido (true ou false)
        style: const TextStyle(
          color: Colors.white,
        ),
        decoration: InputDecoration(
            icon: Icon(
              icon, // Atributos recebido: estilo do icon
              color: Colors.white,
            ),
            border: InputBorder.none,
            hintText: hint, // Atributos recebido: texto
            hintStyle: const TextStyle(
              color: Colors.white,
              fontSize: 15,
            ),
            contentPadding:
                const EdgeInsets.only(top: 30, right: 30, bottom: 30, left: 5)),
      ),
    );
  }
}

class LoginForm extends StatelessWidget {
  const LoginForm({super.key});

  @override
  Widget build(BuildContext context) {
    return Container(
      margin: const EdgeInsets.symmetric(horizontal: 30),
      child: const Form(
        child: Column(
          children: [
            InputField(
              // Chamada da classe que cria os Container com TextFormField
              hint: "Username",
              obscure: false,
              icon: Icons.person_outline,
            ),
            InputField(
              hint: "Password",
              obscure: true,
              icon: Icons.lock_outline,
            )
          ],
        ),
      ),
    );
  }
}

class SignUpButton extends StatelessWidget {
  const SignUpButton({super.key});

  @override
  Widget build(BuildContext context) {
    return TextButton(
      style: TextButton.styleFrom(
        padding: const EdgeInsets.only(top: 160),
      ),
      onPressed: () {
        Navigator.push(
          context,
          MaterialPageRoute(builder: (context) => const CreateAccountScreen()),
        );
      },
      child: const Text(
        "Create new account!",
        textAlign: TextAlign.center,
        overflow: TextOverflow.ellipsis,
        style: TextStyle(
            fontWeight: FontWeight.w300,
            color: Colors.white,
            fontSize: 12,
            letterSpacing: 0.5),
      ),
    );
  }
}

class StaggerAnimation extends StatelessWidget {
  final AnimationController controller;
  StaggerAnimation({super.key, required this.controller})
      : buttonSqueeze = Tween(begin: 320.0, end: 60.0).animate(CurvedAnimation(
            parent: controller, curve: const Interval(0.0, 0.150))),
        buttonZoomOut = Tween(
          begin: 60.0,
          end: 1000.0,
        ).animate(CurvedAnimation(
          parent: controller,
          curve: const Interval(0.5, 1, curve: Curves.bounceOut),
        ));
  final Animation<double> buttonSqueeze;
  final Animation<double> buttonZoomOut;
  Widget _buildAnimation(BuildContext context, Widget? child) {
    return Padding(
      padding: const EdgeInsets.only(bottom: 50),
      child: InkWell(
          onTap: () {
            controller.forward();
          },
          child: Hero(
            tag: "fade",
            child: buttonZoomOut.value == 60
                ? Container(
                    width: buttonSqueeze.value,
                    height: 60,
                    alignment: Alignment.center,
                    decoration: const BoxDecoration(
                        color: Colors.white,
                        borderRadius: BorderRadius.all(Radius.circular(30.0))),
                    child: _buildInside(context))
                : Container(
                    width: buttonZoomOut.value,
                    height: buttonZoomOut.value,
                    decoration: BoxDecoration(
                        color: Colors.white,
                        shape: buttonZoomOut.value < 500
                            ? BoxShape.circle
                            : BoxShape.rectangle),
                  ),
          )),
    );
  }

  Widget _buildInside(BuildContext context) {
    if (buttonSqueeze.value > 75) {
      return const Text(
        "Sign in",
        style: TextStyle(
            color: Color.fromARGB(255, 191, 5, 216),
            fontSize: 20,
            fontWeight: FontWeight.w300,
            letterSpacing: 0.3),
      );
    } else {
      return const CircularProgressIndicator(
        valueColor: AlwaysStoppedAnimation<Color>(Colors.white),
        strokeWidth: 1.0,
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return AnimatedBuilder(
      animation: controller,
      builder: _buildAnimation,
    );
  }
}

#home_screen.dart:
import 'package:flutter/material.dart';
import 'package:trab2/screen/quiz/quiz_screen.dart';

class HomeScreen extends StatelessWidget {
  const HomeScreen({Key? key}) : super(key: key);

  void _navigateToQuiz(BuildContext context, int level) {
    Navigator.of(context).push(MaterialPageRoute(
      builder: (_) => QuizScreen(
          level: level), // Passa o nível selecionado para o QuizScreen
    ));
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Select the level'),
        backgroundColor:
            Colors.purple, // Altere a cor do AppBar para combinar com o fundo
      ),
      body: Container(
        color: Colors.white, // Define o fundo branco
        child: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              ElevatedButton(
                onPressed: () => _navigateToQuiz(context, 1), // Nível 1
                style: ElevatedButton.styleFrom(
                  minimumSize:
                      const Size(200, 60), // Aumenta o tamanho do botão
                  backgroundColor: Colors.purple, // Cor do botão
                ),
                child: const Text(
                  'Easy',
                  style: TextStyle(
                      fontSize: 18, color: Colors.white), // Cor do texto branco
                ),
              ),
              const SizedBox(height: 10), // Espaçamento entre os botões
              ElevatedButton(
                onPressed: () => _navigateToQuiz(context, 2), // Nível 2
                style: ElevatedButton.styleFrom(
                  minimumSize:
                      const Size(200, 60), // Aumenta o tamanho do botão
                  backgroundColor: Colors.purple, // Cor do botão
                ),
                child: const Text(
                  'Medium',
                  style: TextStyle(
                      fontSize: 18, color: Colors.white), // Cor do texto branco
                ),
              ),
              const SizedBox(height: 10), // Espaçamento entre os botões
              ElevatedButton(
                onPressed: () => _navigateToQuiz(context, 3), // Nível 3
                style: ElevatedButton.styleFrom(
                  minimumSize:
                      const Size(200, 60), // Aumenta o tamanho do botão
                  backgroundColor: Colors.purple, // Cor do botão
                ),
                child: const Text(
                  'Hard',
                  style: TextStyle(
                      fontSize: 18, color: Colors.white), // Cor do texto branco
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}

# parte do código (feito por mim) do quiz_screen.dart:
@override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Quiz de Endereçamento IPv4'),
        backgroundColor: Colors.purple,
      ),
      body: _quizFinished
          ? Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text(
                    'Pontuação final: $_score',
                    style: const TextStyle(fontSize: 20.0),
                  ),
                  const SizedBox(height: 20.0),
                  ElevatedButton(
                    onPressed: () {
                      showDialog(
                        context: context,
                        builder: (context) => AlertDialog(
                          title: const Text('Jogo Terminado'),
                          content: const Text(
                              'Você terminou o jogo. Deseja jogar novamente?'),
                          actions: [
                            TextButton(
                              onPressed: () {
                                Navigator.of(context).pop();
                                _resetQuiz();
                              },
                              child: const Text('Sim'),
                            ),
                            TextButton(
                              onPressed: () {
                                Navigator.of(context).pop();
                              },
                              child: const Text('Não'),
                            ),
                          ],
                        ),
                      );
                    },
                    child: const Text('Reiniciar Jogo'),
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.purple,
                      foregroundColor: Colors.white,
                    ),
                  ),
                ],
              ),
            )
          : Padding(
              padding: const EdgeInsets.all(16.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [
                  Text(
                    _question,
                    style: const TextStyle(fontSize: 20.0),
                    textAlign: TextAlign.center,
                  ),
                  const SizedBox(height: 20.0),
                  ElevatedButton(
                    onPressed: () => _checkAnswer(true),
                    child: const Text('Sim'),
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.purple,
                      foregroundColor: Colors.white,
                    ),
                  ),
                  const SizedBox(height: 10.0),
                  ElevatedButton(
                    onPressed: () => _checkAnswer(false),
                    child: const Text('Não'),
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.purple,
                      foregroundColor: Colors.white,
                    ),
                  ),
                  const SizedBox(height: 20.0),
                  Text(
                    _feedback,
                    style:
                        const TextStyle(fontSize: 18.0, color: Colors.purple),
                  ),
                  const SizedBox(height: 20.0),
                  Text(
                    'Pergunta $_questionNumber de 10',
                    style: const TextStyle(fontSize: 16.0),
                  ),
                  const SizedBox(height: 10.0),
                  Text(
                    'Pontuação: $_score',
                    style: const TextStyle(fontSize: 20.0),
                  ),
                ],
              ),
            ),
    );
  }
}
